#!/sbin/sh
## 余空

# 定义module.prop
id=YuKong_Module
name='余空 模板'
version=0615
versionCode=210615
author=余空
description='模块介绍.此为模板.'


on_install() {
    Print "_______________"
    Print "  ※ 模块安装 ※"
    Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
    Print "- 正在刷入"
    unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2
    Print "- 设置权限"
    set_perm_recursive $MODPATH 0 0 0755 0644
}

umask 022
Start_Time=$(date "+%Y-%m-%d %H:%M:%S")
Print_Time=$(date "+%m.%d %H:%M")

TMPDIR=/dev/tmp
rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR
mount /data 2>/dev/null
OUTFD=$2
ZIPFILE=$3

Print() {
    echo "$@"
    sleep 0.02
}

Kernel=$(uname -r)
Rom=$(getprop ro.build.display.id)
Device=$(getprop ro.product.device)
SDK=$(getprop ro.build.version.sdk)
Hardware=$(getprop ro.boot.hardware)
CPU_ABI=$(getprop ro.product.cpu.abi)
Android=$(getprop ro.build.version.release)
Market_Name=$(getprop ro.product.marketname)
Version=$(getprop ro.build.version.incremental)
[ -e /sys/block/sda/size ] && ROM_TYPE="UFS" || ROM_TYPE="eMMC"
[ -e /proc/scsi/scsi ] && UFS_MODEL=$(sed -n 3p /proc/scsi/scsi | awk '/Vendor/{print $2}') && Particles=$(sed -n 3p /proc/scsi/scsi | awk '/Vendor/{print $4}') || UFS_MODEL="unknown"

if [[ $Android -ge 11 ]]; then
    PERSISTDIR=/dev/*/.magisk/mirror/persist
else
    PERSISTDIR=/sbin/.magisk/mirror/persist
fi

require_new_magisk() {
    Print
    Print "- 当前模块不支持此Magisk版本."
    Print "- 请安装 Magisk v20.4+!"
    Print
    Print "- 或Magisk环境不完整."
    Print "- 请修复Magisk环境!"
    Print
    exit 1
}

[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -lt 20400 ] && require_new_magisk

setup_flashable
mount_partitions
api_level_arch_detect

if $BOOTMODE; then
    boot_actions
else
    recovery_actions
fi

Ver=$version,刷入时间:$Print_Time

echo "id=$id
name=$name
version=$Ver
versionCode=$versionCode
author=$author
description=$description" > $TMPDIR/module.prop

# 输出system.prop
#echo '    ' > $TMPDIR/system.prop

# 输出service.sh
#echo '#!/system/bin/sh
#MODDIR=${0%/*}' > $TMPDIR/service.sh

# 输出uninstall.sh
#echo '#!/system/bin/sh
#MODDIR=${0%/*}' > $TMPDIR/uninstall.sh

# 输出post-fs-data.sh
#echo '#!/system/bin/sh
#MODDIR=${0%/*}' > $TMPDIR/post-fs-data.sh

# sepolicy.rule
#echo '    ' > $TMPDIR/sepolicy.rule

[ ! -f $TMPDIR/module.prop ] && abort "! 从 zip 中提取文件失败."
$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=`grep_prop id $TMPDIR/module.prop`
MODPATH=$MODULEROOT/$MODID

rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH
cp -r $TMPDIR/* $MODPATH/

print_modname() {
    Print "- Powered By Magisk"
    Print "_______________"
    Print "  ※ 作者信息 ※"
    Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
    Print " 8b        d8           88      a8P"
    Print "  Y8,    ,8P            88    ,88'"
    Print "   Y8,  ,8P             88  ,88\""
    Print "    \"8aa8\"  88       88 88,d88'"
    Print "     \`88'   88       88 8888\"88,"
    Print "      88    88       88 88P   Y8b"
    Print "      88    \"8a,   ,a88 88     \"88,"
    Print "      88     \`\"YbbdP'Y8 88       Y8b"
    Print "_______________"
    Print "  ※ 模块信息 ※"
    Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
    Print "- 模块名称: $name"
    Print "- 模块版本: $version"
    Print "- 模块代号: $id"
    Print "- 模块制作: $auther"
    Print "_______________"
    Print "  ※ 系统详情 ※"
    Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
    Print "- 设备代号: $Device"
    Print "- 销售型号: $Market_Name"
    Print "- 芯片型号: $Hardware $(($(cat /sys/devices/system/cpu/kernel_max) + 1))核"
    Print "- 芯片架构: $CPU_ABI"
    Print "- 安卓版本: Android $Android"
    Print "- 系统版本: $Version"
    Print "- 基线版本: $Rom"
    Print "- 内存大小: $(cat /proc/meminfo | head -n 1 | awk '{print $2/1000}')MB"
    Print "- 闪存颗粒: $UFS_MODEL $Particles"
    Print "- 内核版本: $Kernel"
}

print_modname
on_install

for TARGET in $REPLACE; do
    echo "- 正在删除目标文件: ${TARGET}."
    mktouch $MODPATH$TARGET/.replace
done

if $BOOTMODE; then
    mktouch $NVBASE/modules/$MODID/update
    cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
fi

if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
    echo "- 安装自定义sepolicy补丁."
    PERSISTMOD=$PERSISTDIR/magisk/$MODID
    mkdir -p $PERSISTMOD
    cp -af $MODPATH/sepolicy.rule $PERSISTMOD/sepolicy.rule
fi

rm -rf \
$MODPATH/system/placeholder \
$MODPATH/README.md $MODPATH/.git* 2>/dev/null

cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

Print "_______________"
Print "  ※ 附加信息 ※"
Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
Print "- 刷入时间: $Start_Time"
End_Time=$(date "+%Y-%m-%d %H:%M:%S")
Duration=$(Print $((Sleep_Time + $(date +%s -d "${End_Time}") - $(date +%s -d "${Start_Time}"))) | awk '{t=split("60 秒 60 分 24 时 999 天",a);for(n=1;n<t;n+=2){if($1==0)break;s=$1%a[n]a[n+1]s;$1=int($1/a[n])}print s}')
Print "- 刷入耗时: $Duration"
Print "_______________"
Print "  ※ 刷入成功 ※"
Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
Print "- 请重启设备."
exit 0
